spring.application.name=auth-service

# MySQL DB connection
#spring.datasource.url=jdbc:mysql://localhost:3306/auth_db
#spring.datasource.username=root
#spring.datasource.password=chaminduhs
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# Supabase PostgreSQL DB connection
##spring.datasource.url=jdbc:postgresql://db.qlsxgrmqujockaaupdnp.supabase.co:5432/postgres?user=postgres&password=Chaminduhs12
##spring.datasource.username=postgres
##spring.datasource.password=Chaminduhs12   # You get this from Supabase settings
##spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate/JPA
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.open-in-view=false 
# Disable Open EntityManagerInViewFilter



jwt.secret.key=yoursecretkeyhereforjwttokengenerationandvalidation
server.servlet.context-path=/api/v1


# mail configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=chamindusathsara28@gmail.com
spring.mail.password=qgze wrra xhtb nqji
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.from=chamindusathsara28@gmail.com


# Kafka configuration
spring.kafka.producer.bootstrap-servers=localhost:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.template.default-topic=email_default_topic

#
server.port=8081

client.url=http://localhost:5173


#cloudinary configuration

cloudinary.cloud.name=dtjmprr4g
cloudinary.api.key=359642344349841
cloudinary.api.secret=VLH-QuI92OkusJUWn2_q7OpZgso


# === GitHub OAuth2 Configuration ===
spring.security.oauth2.client.registration.github.client-id=Ov23lim0EusqplYFDyL6
spring.security.oauth2.client.registration.github.client-secret=a0b9b98f650758950fd9ebd095b6a6377e43f8d2
spring.security.oauth2.client.registration.github.scope=read:user,user:email


# === Google OAuth2 Configuration ===
spring.security.oauth2.client.registration.google.client-id=136096471068-6gaaum4t05jkst47e1pga5hh70ma61n1.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
